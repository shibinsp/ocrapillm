{
  "success": true,
  "document_id": "04c73408-db56-4267-8aa3-315cfb3bb530",
  "pdf_file": "uploads\\cad496fa-69e5-49b3-bfd3-c54436fffe44_one_page.pdf",
  "total_pages": 1,
  "successful_pages": 1,
  "failed_pages": 0,
  "total_characters": 630,
  "total_tokens_used": 79,
  "extracted_text": "Page 1: This is extracted text from page 1.\n        \nThis is a demonstration of the OCR system integrated with PostgreSQL database.\nThe system can process PDF documents, extract text from each page, and store all data in the database.\n        \nKey features:\n- Frontend upload integration\n- Database storage of all content\n- Page-by-page processing\n- Comprehensive logging\n- Error handling and recovery\n        \nThis text would normally come from an actual OCR service like Mistral Pixtral API, Tesseract, or other OCR engines.",
  "output_files": {
    "word_document": "outputs\\cad496fa-69e5-49b3-bfd3-c54436fffe44_one_page_extracted.docx",
    "complete_text": "outputs\\cad496fa-69e5-49b3-bfd3-c54436fffe44_one_page_complete.txt",
    "individual_pages": [
      "outputs\\page_001.txt"
    ]
  },
  "page_results": [
    {
      "page": 1,
      "text": "This is extracted text from page 1.\n        \nThis is a demonstration of the OCR system integrated with PostgreSQL database.\nThe system can process PDF documents, extract text from each page, and store all data in the database.\n        \nKey features:\n- Frontend upload integration\n- Database storage of all content\n- Page-by-page processing\n- Comprehensive logging\n- Error handling and recovery\n        \nThis text would normally come from an actual OCR service like Mistral Pixtral API, Tesseract, or other OCR engines.",
      "status": "success",
      "usage": {
        "total_tokens": 79
      },
      "text_length": 518,
      "page_id": "98798fc6-a170-4c3f-b896-0ecfce2fb13a",
      "content_id": "384d221f-696b-4676-bb05-ea38d6a02fc1"
    }
  ],
  "processing_time_ms": 6854,
  "status": "completed"
}