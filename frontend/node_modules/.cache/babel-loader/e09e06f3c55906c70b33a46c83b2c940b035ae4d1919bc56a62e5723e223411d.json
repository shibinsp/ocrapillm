{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 300000,\n  // 5 minutes for OCR processing\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  console.log(`API Response: ${response.status} ${response.config.url}`);\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$response3;\n  console.error('API Response Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n\n  // Handle common errors\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 404) {\n    throw new Error('Resource not found');\n  } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 500) {\n    throw new Error('Server error occurred');\n  } else if (error.code === 'ECONNABORTED') {\n    throw new Error('Request timeout - please try again');\n  } else if (!error.response) {\n    throw new Error('Network error - please check your connection');\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const apiService = {\n  // Document upload and processing\n  uploadDocument: async (file, onProgress) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post('/upload/', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      onUploadProgress: progressEvent => {\n        if (onProgress && progressEvent.total) {\n          const progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          onProgress(progress);\n        }\n      }\n    });\n    return response.data;\n  },\n  // Get document processing status\n  getProcessingStatus: async documentId => {\n    const response = await api.get(`/documents/${documentId}/status`);\n    return response.data;\n  },\n  // Get processed document content\n  getDocumentContent: async documentId => {\n    const response = await api.get(`/documents/${documentId}/content`);\n    return response.data;\n  },\n  // Validate/update document text\n  validateDocument: async (documentId, text) => {\n    const response = await api.post(`/validate/${documentId}`, {\n      validated_text: text\n    });\n    return response.data;\n  },\n  // Get all documents\n  getDocuments: async () => {\n    const response = await api.get('/documents/');\n    return response.data;\n  },\n  // Delete document\n  deleteDocument: async documentId => {\n    const response = await api.delete(`/documents/${documentId}`);\n    return response.data;\n  },\n  // Chat with AI about document\n  chatWithDocument: async (documentId, message, chatHistory = []) => {\n    const response = await api.post(`/chat/${documentId}`, {\n      message,\n      chat_history: chatHistory\n    });\n    return response.data;\n  },\n  // Get chat history for document\n  getChatHistory: async documentId => {\n    const response = await api.get(`/documents/${documentId}/chat`);\n    return response.data;\n  },\n  // Chat with AI about all documents\n  chatWithAllDocuments: async (message, chatHistory = []) => {\n    const response = await api.post('/chat/all', {\n      message,\n      chat_history: chatHistory\n    });\n    return response.data;\n  },\n  // Get document pages with images for validation\n  getDocumentPages: async documentId => {\n    const response = await api.get(`/documents/${documentId}/pages`);\n    return response.data;\n  },\n  // Validate a specific page\n  validatePage: async (documentId, pageId, validatedText) => {\n    const response = await api.post(`/documents/${documentId}/pages/${pageId}/validate`, {\n      validated_text: validatedText\n    });\n    return response.data;\n  },\n  // Export document\n  exportDocument: async (documentId, format = 'txt') => {\n    const response = await api.get(`/documents/${documentId}/export`, {\n      params: {\n        format\n      },\n      responseType: 'blob'\n    });\n    return response.data;\n  },\n  // Search within document\n  searchDocument: async (documentId, query) => {\n    const response = await api.post(`/documents/${documentId}/search`, {\n      query\n    });\n    return response.data;\n  },\n  // Health check\n  healthCheck: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  }\n};\n\n// Utility functions\nexport const downloadFile = (blob, filename) => {\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};\nexport const formatFileSize = bytes => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\nexport const validateFile = file => {\n  const maxSize = 50 * 1024 * 1024; // 50MB\n  const allowedTypes = ['application/pdf'];\n  if (!allowedTypes.includes(file.type)) {\n    throw new Error('Only PDF files are allowed');\n  }\n  if (file.size > maxSize) {\n    throw new Error('File size must be less than 50MB');\n  }\n  return true;\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","_error$response2","_error$response3","data","message","Error","code","apiService","uploadDocument","file","onProgress","formData","FormData","append","post","onUploadProgress","progressEvent","total","progress","Math","round","loaded","getProcessingStatus","documentId","get","getDocumentContent","validateDocument","text","validated_text","getDocuments","deleteDocument","delete","chatWithDocument","chatHistory","chat_history","getChatHistory","chatWithAllDocuments","getDocumentPages","validatePage","pageId","validatedText","exportDocument","format","params","responseType","searchDocument","query","healthCheck","downloadFile","blob","filename","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","formatFileSize","bytes","k","sizes","i","floor","parseFloat","pow","toFixed","validateFile","maxSize","allowedTypes","includes","type","size"],"sources":["D:/trae/ocrapillm/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 300000, // 5 minutes for OCR processing\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    console.log(`API Response: ${response.status} ${response.config.url}`);\n    return response;\n  },\n  (error) => {\n    console.error('API Response Error:', error.response?.data || error.message);\n    \n    // Handle common errors\n    if (error.response?.status === 404) {\n      throw new Error('Resource not found');\n    } else if (error.response?.status === 500) {\n      throw new Error('Server error occurred');\n    } else if (error.code === 'ECONNABORTED') {\n      throw new Error('Request timeout - please try again');\n    } else if (!error.response) {\n      throw new Error('Network error - please check your connection');\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const apiService = {\n  // Document upload and processing\n  uploadDocument: async (file, onProgress) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    const response = await api.post('/upload/', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: (progressEvent) => {\n        if (onProgress && progressEvent.total) {\n          const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          onProgress(progress);\n        }\n      },\n    });\n    \n    return response.data;\n  },\n  \n  // Get document processing status\n  getProcessingStatus: async (documentId) => {\n    const response = await api.get(`/documents/${documentId}/status`);\n    return response.data;\n  },\n  \n  // Get processed document content\n  getDocumentContent: async (documentId) => {\n    const response = await api.get(`/documents/${documentId}/content`);\n    return response.data;\n  },\n  \n  // Validate/update document text\n  validateDocument: async (documentId, text) => {\n    const response = await api.post(`/validate/${documentId}`, {\n      validated_text: text,\n    });\n    return response.data;\n  },\n  \n  // Get all documents\n  getDocuments: async () => {\n    const response = await api.get('/documents/');\n    return response.data;\n  },\n  \n  // Delete document\n  deleteDocument: async (documentId) => {\n    const response = await api.delete(`/documents/${documentId}`);\n    return response.data;\n  },\n  \n  // Chat with AI about document\n  chatWithDocument: async (documentId, message, chatHistory = []) => {\n    const response = await api.post(`/chat/${documentId}`, {\n      message,\n      chat_history: chatHistory,\n    });\n    return response.data;\n  },\n  \n  // Get chat history for document\n  getChatHistory: async (documentId) => {\n    const response = await api.get(`/documents/${documentId}/chat`);\n    return response.data;\n  },\n\n  // Chat with AI about all documents\n  chatWithAllDocuments: async (message, chatHistory = []) => {\n    const response = await api.post('/chat/all', {\n      message,\n      chat_history: chatHistory,\n    });\n    return response.data;\n  },\n\n  // Get document pages with images for validation\n  getDocumentPages: async (documentId) => {\n    const response = await api.get(`/documents/${documentId}/pages`);\n    return response.data;\n  },\n\n  // Validate a specific page\n  validatePage: async (documentId, pageId, validatedText) => {\n    const response = await api.post(`/documents/${documentId}/pages/${pageId}/validate`, {\n      validated_text: validatedText\n    });\n    return response.data;\n  },\n  \n  // Export document\n  exportDocument: async (documentId, format = 'txt') => {\n    const response = await api.get(`/documents/${documentId}/export`, {\n      params: { format },\n      responseType: 'blob',\n    });\n    return response.data;\n  },\n  \n  // Search within document\n  searchDocument: async (documentId, query) => {\n    const response = await api.post(`/documents/${documentId}/search`, {\n      query,\n    });\n    return response.data;\n  },\n  \n  // Health check\n  healthCheck: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n};\n\n// Utility functions\nexport const downloadFile = (blob, filename) => {\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};\n\nexport const formatFileSize = (bytes) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nexport const validateFile = (file) => {\n  const maxSize = 50 * 1024 * 1024; // 50MB\n  const allowedTypes = ['application/pdf'];\n  \n  if (!allowedTypes.includes(file.type)) {\n    throw new Error('Only PDF files are allowed');\n  }\n  \n  if (file.size > maxSize) {\n    throw new Error('File size must be less than 50MB');\n  }\n  \n  return true;\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}