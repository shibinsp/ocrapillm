{"ast":null,"code":"var _jsxFileName = \"D:\\\\trae\\\\ocrapillm\\\\frontend\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nconst initialState = {\n  // Theme\n  darkMode: false,\n  // Documents\n  documents: [],\n  currentDocument: null,\n  // Upload state\n  uploadProgress: 0,\n  isUploading: false,\n  // OCR Processing\n  isProcessing: false,\n  processingStatus: '',\n  processingProgress: 0,\n  // Text Editor\n  extractedText: '',\n  isTextModified: false,\n  // Chat\n  chatMessages: [],\n  isChatLoading: false,\n  // UI State\n  activeTab: 'upload',\n  // upload, editor, chat\n  sidebarOpen: true\n};\nconst appReducer = (state, action) => {\n  var _state$currentDocumen;\n  switch (action.type) {\n    case 'TOGGLE_DARK_MODE':\n      return {\n        ...state,\n        darkMode: !state.darkMode\n      };\n    case 'SET_ACTIVE_TAB':\n      return {\n        ...state,\n        activeTab: action.payload\n      };\n    case 'TOGGLE_SIDEBAR':\n      return {\n        ...state,\n        sidebarOpen: !state.sidebarOpen\n      };\n    case 'SET_UPLOAD_PROGRESS':\n      return {\n        ...state,\n        uploadProgress: action.payload\n      };\n    case 'SET_UPLOADING':\n      return {\n        ...state,\n        isUploading: action.payload\n      };\n    case 'SET_PROCESSING':\n      return {\n        ...state,\n        isProcessing: action.payload.isProcessing,\n        processingStatus: action.payload.status || '',\n        processingProgress: action.payload.progress || 0\n      };\n    case 'SET_DOCUMENTS':\n      return {\n        ...state,\n        documents: action.payload\n      };\n    case 'ADD_DOCUMENT':\n      return {\n        ...state,\n        documents: [action.payload, ...state.documents],\n        currentDocument: action.payload\n      };\n    case 'SET_CURRENT_DOCUMENT':\n      return {\n        ...state,\n        currentDocument: action.payload\n      };\n    case 'DELETE_DOCUMENT':\n      const filteredDocs = state.documents.filter(doc => doc.id !== action.payload);\n      return {\n        ...state,\n        documents: filteredDocs,\n        currentDocument: ((_state$currentDocumen = state.currentDocument) === null || _state$currentDocumen === void 0 ? void 0 : _state$currentDocumen.id) === action.payload ? null : state.currentDocument\n      };\n    case 'SET_EXTRACTED_TEXT':\n      return {\n        ...state,\n        extractedText: action.payload,\n        isTextModified: false\n      };\n    case 'UPDATE_TEXT':\n      return {\n        ...state,\n        extractedText: action.payload,\n        isTextModified: true\n      };\n    case 'SET_TEXT_SAVED':\n      return {\n        ...state,\n        isTextModified: false\n      };\n    case 'SET_CHAT_MESSAGES':\n      return {\n        ...state,\n        chatMessages: action.payload\n      };\n    case 'ADD_CHAT_MESSAGE':\n      return {\n        ...state,\n        chatMessages: [...state.chatMessages, action.payload]\n      };\n    case 'SET_CHAT_LOADING':\n      return {\n        ...state,\n        isChatLoading: action.payload\n      };\n    case 'CLEAR_CHAT':\n      return {\n        ...state,\n        chatMessages: []\n      };\n    case 'RESET_UPLOAD_STATE':\n      return {\n        ...state,\n        uploadProgress: 0,\n        isUploading: false,\n        isProcessing: false,\n        processingStatus: '',\n        processingProgress: 0\n      };\n    default:\n      return state;\n  }\n};\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Load theme from localStorage\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('darkMode');\n    if (savedTheme) {\n      dispatch({\n        type: 'TOGGLE_DARK_MODE'\n      });\n    }\n  }, []);\n\n  // Apply dark mode class to document\n  useEffect(() => {\n    if (state.darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n    localStorage.setItem('darkMode', state.darkMode);\n  }, [state.darkMode]);\n\n  // Auto-save functionality\n  useEffect(() => {\n    if (state.isTextModified && state.currentDocument) {\n      const autoSaveTimer = setTimeout(() => {\n        // Auto-save logic here\n        console.log('Auto-saving document...');\n      }, 30000); // Auto-save after 30 seconds of inactivity\n\n      return () => clearTimeout(autoSaveTimer);\n    }\n  }, [state.isTextModified, state.extractedText, state.currentDocument]);\n  const actions = {\n    toggleDarkMode: () => dispatch({\n      type: 'TOGGLE_DARK_MODE'\n    }),\n    setActiveTab: tab => dispatch({\n      type: 'SET_ACTIVE_TAB',\n      payload: tab\n    }),\n    toggleSidebar: () => dispatch({\n      type: 'TOGGLE_SIDEBAR'\n    }),\n    setUploadProgress: progress => dispatch({\n      type: 'SET_UPLOAD_PROGRESS',\n      payload: progress\n    }),\n    setUploading: isUploading => dispatch({\n      type: 'SET_UPLOADING',\n      payload: isUploading\n    }),\n    setProcessing: processingData => dispatch({\n      type: 'SET_PROCESSING',\n      payload: processingData\n    }),\n    setDocuments: documents => dispatch({\n      type: 'SET_DOCUMENTS',\n      payload: documents\n    }),\n    addDocument: document => dispatch({\n      type: 'ADD_DOCUMENT',\n      payload: document\n    }),\n    setCurrentDocument: document => dispatch({\n      type: 'SET_CURRENT_DOCUMENT',\n      payload: document\n    }),\n    deleteDocument: documentId => dispatch({\n      type: 'DELETE_DOCUMENT',\n      payload: documentId\n    }),\n    setExtractedText: text => dispatch({\n      type: 'SET_EXTRACTED_TEXT',\n      payload: text\n    }),\n    updateText: text => dispatch({\n      type: 'UPDATE_TEXT',\n      payload: text\n    }),\n    setTextSaved: () => dispatch({\n      type: 'SET_TEXT_SAVED'\n    }),\n    setChatMessages: messages => dispatch({\n      type: 'SET_CHAT_MESSAGES',\n      payload: messages\n    }),\n    addChatMessage: message => dispatch({\n      type: 'ADD_CHAT_MESSAGE',\n      payload: message\n    }),\n    setChatLoading: isLoading => dispatch({\n      type: 'SET_CHAT_LOADING',\n      payload: isLoading\n    }),\n    clearChat: () => dispatch({\n      type: 'CLEAR_CHAT'\n    }),\n    resetUploadState: () => dispatch({\n      type: 'RESET_UPLOAD_STATE'\n    }),\n    showSuccess: message => toast.success(message),\n    showError: message => toast.error(message),\n    showInfo: message => toast(message)\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      state,\n      actions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"s3jE+e7wLGXN/2uWqdAG2uRSMfA=\");\n_c = AppProvider;\nexport const useApp = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","toast","jsxDEV","_jsxDEV","AppContext","initialState","darkMode","documents","currentDocument","uploadProgress","isUploading","isProcessing","processingStatus","processingProgress","extractedText","isTextModified","chatMessages","isChatLoading","activeTab","sidebarOpen","appReducer","state","action","_state$currentDocumen","type","payload","status","progress","filteredDocs","filter","doc","id","AppProvider","children","_s","dispatch","savedTheme","localStorage","getItem","document","documentElement","classList","add","remove","setItem","autoSaveTimer","setTimeout","console","log","clearTimeout","actions","toggleDarkMode","setActiveTab","tab","toggleSidebar","setUploadProgress","setUploading","setProcessing","processingData","setDocuments","addDocument","setCurrentDocument","deleteDocument","documentId","setExtractedText","text","updateText","setTextSaved","setChatMessages","messages","addChatMessage","message","setChatLoading","isLoading","clearChat","resetUploadState","showSuccess","success","showError","error","showInfo","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApp","_s2","context","Error","$RefreshReg$"],"sources":["D:/trae/ocrapillm/frontend/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport toast from 'react-hot-toast';\n\nconst AppContext = createContext();\n\nconst initialState = {\n  // Theme\n  darkMode: false,\n  \n  // Documents\n  documents: [],\n  currentDocument: null,\n  \n  // Upload state\n  uploadProgress: 0,\n  isUploading: false,\n  \n  // OCR Processing\n  isProcessing: false,\n  processingStatus: '',\n  processingProgress: 0,\n  \n  // Text Editor\n  extractedText: '',\n  isTextModified: false,\n  \n  // Chat\n  chatMessages: [],\n  isChatLoading: false,\n  \n  // UI State\n  activeTab: 'upload', // upload, editor, chat\n  sidebarOpen: true,\n};\n\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case 'TOGGLE_DARK_MODE':\n      return { ...state, darkMode: !state.darkMode };\n    \n    case 'SET_ACTIVE_TAB':\n      return { ...state, activeTab: action.payload };\n    \n    case 'TOGGLE_SIDEBAR':\n      return { ...state, sidebarOpen: !state.sidebarOpen };\n    \n    case 'SET_UPLOAD_PROGRESS':\n      return { ...state, uploadProgress: action.payload };\n    \n    case 'SET_UPLOADING':\n      return { ...state, isUploading: action.payload };\n    \n    case 'SET_PROCESSING':\n      return { \n        ...state, \n        isProcessing: action.payload.isProcessing,\n        processingStatus: action.payload.status || '',\n        processingProgress: action.payload.progress || 0\n      };\n    \n    case 'SET_DOCUMENTS':\n      return { ...state, documents: action.payload };\n    \n    case 'ADD_DOCUMENT':\n      return { \n        ...state, \n        documents: [action.payload, ...state.documents],\n        currentDocument: action.payload\n      };\n    \n    case 'SET_CURRENT_DOCUMENT':\n      return { ...state, currentDocument: action.payload };\n    \n    case 'DELETE_DOCUMENT':\n      const filteredDocs = state.documents.filter(doc => doc.id !== action.payload);\n      return { \n        ...state, \n        documents: filteredDocs,\n        currentDocument: state.currentDocument?.id === action.payload ? null : state.currentDocument\n      };\n    \n    case 'SET_EXTRACTED_TEXT':\n      return { \n        ...state, \n        extractedText: action.payload,\n        isTextModified: false\n      };\n    \n    case 'UPDATE_TEXT':\n      return { \n        ...state, \n        extractedText: action.payload,\n        isTextModified: true\n      };\n    \n    case 'SET_TEXT_SAVED':\n      return { ...state, isTextModified: false };\n    \n    case 'SET_CHAT_MESSAGES':\n      return { ...state, chatMessages: action.payload };\n    \n    case 'ADD_CHAT_MESSAGE':\n      return { \n        ...state, \n        chatMessages: [...state.chatMessages, action.payload]\n      };\n    \n    case 'SET_CHAT_LOADING':\n      return { ...state, isChatLoading: action.payload };\n    \n    case 'CLEAR_CHAT':\n      return { ...state, chatMessages: [] };\n    \n    case 'RESET_UPLOAD_STATE':\n      return {\n        ...state,\n        uploadProgress: 0,\n        isUploading: false,\n        isProcessing: false,\n        processingStatus: '',\n        processingProgress: 0\n      };\n    \n    default:\n      return state;\n  }\n};\n\nexport const AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Load theme from localStorage\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('darkMode');\n    if (savedTheme) {\n      dispatch({ type: 'TOGGLE_DARK_MODE' });\n    }\n  }, []);\n\n  // Apply dark mode class to document\n  useEffect(() => {\n    if (state.darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n    localStorage.setItem('darkMode', state.darkMode);\n  }, [state.darkMode]);\n\n  // Auto-save functionality\n  useEffect(() => {\n    if (state.isTextModified && state.currentDocument) {\n      const autoSaveTimer = setTimeout(() => {\n        // Auto-save logic here\n        console.log('Auto-saving document...');\n      }, 30000); // Auto-save after 30 seconds of inactivity\n\n      return () => clearTimeout(autoSaveTimer);\n    }\n  }, [state.isTextModified, state.extractedText, state.currentDocument]);\n\n  const actions = {\n    toggleDarkMode: () => dispatch({ type: 'TOGGLE_DARK_MODE' }),\n    setActiveTab: (tab) => dispatch({ type: 'SET_ACTIVE_TAB', payload: tab }),\n    toggleSidebar: () => dispatch({ type: 'TOGGLE_SIDEBAR' }),\n    \n    setUploadProgress: (progress) => dispatch({ type: 'SET_UPLOAD_PROGRESS', payload: progress }),\n    setUploading: (isUploading) => dispatch({ type: 'SET_UPLOADING', payload: isUploading }),\n    \n    setProcessing: (processingData) => dispatch({ type: 'SET_PROCESSING', payload: processingData }),\n    \n    setDocuments: (documents) => dispatch({ type: 'SET_DOCUMENTS', payload: documents }),\n    addDocument: (document) => dispatch({ type: 'ADD_DOCUMENT', payload: document }),\n    setCurrentDocument: (document) => dispatch({ type: 'SET_CURRENT_DOCUMENT', payload: document }),\n    deleteDocument: (documentId) => dispatch({ type: 'DELETE_DOCUMENT', payload: documentId }),\n    \n    setExtractedText: (text) => dispatch({ type: 'SET_EXTRACTED_TEXT', payload: text }),\n    updateText: (text) => dispatch({ type: 'UPDATE_TEXT', payload: text }),\n    setTextSaved: () => dispatch({ type: 'SET_TEXT_SAVED' }),\n    \n    setChatMessages: (messages) => dispatch({ type: 'SET_CHAT_MESSAGES', payload: messages }),\n    addChatMessage: (message) => dispatch({ type: 'ADD_CHAT_MESSAGE', payload: message }),\n    setChatLoading: (isLoading) => dispatch({ type: 'SET_CHAT_LOADING', payload: isLoading }),\n    clearChat: () => dispatch({ type: 'CLEAR_CHAT' }),\n    \n    resetUploadState: () => dispatch({ type: 'RESET_UPLOAD_STATE' }),\n    \n    showSuccess: (message) => toast.success(message),\n    showError: (message) => toast.error(message),\n    showInfo: (message) => toast(message),\n  };\n\n  return (\n    <AppContext.Provider value={{ state, actions }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n\nexport default AppContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}